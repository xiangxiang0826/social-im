// Code generated by goctl. DO NOT EDIT.
package types

type PartyCreateReq struct {
	Name               string `json:"name" validate:"required,max=60,min=1"`
	Uid                int64  `json:"uid" validate:"required,numeric,min=1"`
	BackgroundUrl      string `json:"background_url" validate:"required,url"`
	BackgroundSmallUrl string `json:"background_small_url" validate:"required,url"`
	PartyType          int64  `json:"party_type" validate:"required,numeric,min=1"`
}

type PartyCreateResp struct {
	Id                 int64  `json:"id"`
	Mark               string `json:"mark"`
	DayRemaiNum        int64  `json:"day_remai_num"`
	BackgroundUrl      string `json:"background_url"`
	BackgroundSmallUrl string `json:"background_small_url"`
	Name               string `json:"name"`
	PartyType          int64  `json:"party_type"`
	CreatedAt          int64  `json:"created_at"`
	RtcToken           string `json:"rtc_token"`
}

type RoomLimitReq struct {
	Uid    int64 `json:"uid" validate:"required,numeric,min=1"`
	DayNum int64 `json:"day_num" validate:"omitempty,numeric"`
	Type   int64 `json:"type" validate:"required,numeric,min=1"`
}

type RoomLimitResp struct {
	DayRemaiNum int64 `json:"day_remai_num"`
}

type PartyJoinReq struct {
	RoomId int64 `json:"room_id" validate:"required,numeric,min=1"`
	Uid    int64 `json:"uid" validate:"required,numeric,min=1"`
}

type PartyJoinResp struct {
	Iret          int64  `json:"iret"`
	Smsg          string `json:"smsg"`
	Name          string `json:"name"`
	BackgroundUrl string `json:"background_url"`
	PartyType     int64  `json:"party_type"`
	CreateUser    int64  `json:"creator"`
	CreateAt      int64  `json:"creat_at"`
	RoomId        int64  `json:"room_id"`
	Mark          string `json:"mark"`
	RtcToken      string `json:"rtc_token"`
}

type PartyLeaveReq struct {
	RoomId int64 `json:"room_id" validate:"required,numeric,min=1"`
	Uid    int64 `json:"uid" validate:"required,numeric,min=1"`
}

type PartyLeaveResp struct {
	Iret int64  `json:"iret"`
	Smsg string `json:"smsg"`
}

type PartyRemoveReq struct {
	RoomId int64 `json:"room_id" validate:"required,numeric,min=1"`
	Uid    int64 `json:"uid" validate:"required,numeric,min=1"`
}

type PartyRemoveResp struct {
	Iret int64  `json:"iret"`
	Smsg string `json:"smsg"`
}

type PartyTerminateReq struct {
	RoomId int64 `json:"room_id" validate:"required,numeric,min=1"`
	Uid    int64 `json:"uid" validate:"required,numeric,min=1"`
}

type PartyTerminateResp struct {
	Iret             int64  `json:"iret"`
	Smsg             string `json:"smsg"`
	Name             string `json:"name"`
	PartyType        int64  `json:"party_type"`
	CreateUser       int64  `json:"creator"`
	CreateAt         int64  `json:"creat_at"`
	TerminateAt      int64  `json:"terminate_at"`
	RoomUV           int64  `json:"room_uv"`
	RoomNewFollowers int64  `json:"new_followers"`
}

type UserInfo struct {
	Avatar string `json:"avatar"`
}

type PartyInfo struct {
	Id                 int64       `json:"id"`
	Name               string      `json:"name"`                 //名称
	Mark               string      `json:"mark"`                 //房间唯一标识id
	BackgroundSmallUrl string      `json:"background_small_url"` //背景小图地址
	PartyType          int64       `json:"party_type"`
	CreatedAt          int64       `json:"created_at"`
	OnlineNums         int64       `json:"online_nums"`
	IsHot              int64       `json:"is_host"`
	UserList           []*UserInfo `json:"user_list"`
}

type PartyListReq struct {
	LastId     int64 `json:"last_id" validate:"omitempty,numeric"`
	OnlineNums int64 `json:"online_nums" validate:"omitempty,numeric,max=500,min=0"`
	PageSize   int64 `json:"page_size" validate:"required,numeric,max=100,min=1"`
}

type PartyListResp struct {
	Total int64        `json:"total"`
	List  []*PartyInfo `json:"list"`
}

type UserNumReportReq struct {
	Mark      string `json:"mark" validate:"required,max=9,min=9"`
	OnlineNum int64  `json:"online_num" validate:"omitempty,numeric,max=500,min=0"`
}

type UserNumReportResp struct {
	Mark string `json:"mark"`
}

type PartyNameUpdateReq struct {
	Name string `json:"name" validate:"required,max=60,min=1"`
	Uid  int64  `json:"uid" validate:"required,numeric,min=1"`
	Mark string `json:"mark"`
}

type PartyNameUpdateResp struct {
	Id   int64  `json:"id"`
	Mark string `json:"mark"`
	Name string `json:"name"`
}

type PartyBackGroundImgUpdateReq struct {
	Uid                int64  `json:"uid" validate:"required,numeric,min=1"`
	Mark               string `json:"mark"`
	BackgroundUrl      string `json:"background_url" validate:"omitempty,url"`
	BackgroundSmallUrl string `json:"background_small_url" validate:"omitempty,url"`
}

type PartyBackGroundImgUpdateResp struct {
	Id                 int64  `json:"id"`
	Mark               string `json:"mark"`
	BackgroundUrl      string `json:"background_url"`
	BackgroundSmallUrl string `json:"background_small_url"`
}

type ProhibitionGetReq struct {
	RoomId   int64 `json:"room_id"`
	RoomType int64 `json:"room_type"`
	Uid      int64 `json:"uid"`
}

type ProhibitionGetResp struct {
	Id       int64 `json:"id"`
	RoomType int64 `json:"room_type"`
	RoomId   int64 `json:"room_id"`
	Status   int64 `json:"status"`
	Uid      int64 `json:"uid"`
}

type ProhibitionCreateReq struct {
	Uid            int64 `json:"uid" validate:"required,numeric,min=1"`
	ProhibitionUid int64 `json:"prohibition_uid" validate:"required,numeric,min=1"`
	RoomId         int64 `json:"room_id" validate:"required,numeric,min=1"`
	RoomType       int64 `json:"room_type" validate:"required,numeric,min=1"`
}

type ProhibitionCreateResp struct {
	Id           int64 `json:"id"`
	Status       int64 `json:"status"`
	RoomId       int64 `json:"room_id"`
	RoomType     int64 `json:"room_type"`
	Uid          int64 `json:"uid"`
	OperatorUser int64 `json:"operator_user"`
}

type ProhibitionRemoveReq struct {
	Id       int64 `json:"id" validate:"required,numeric,min=1"`
	RoomId   int64 `json:"room_id" validate:"required,numeric,min=1"`
	RoomType int64 `json:"room_type" validate:"required,numeric,min=1"`
}

type ProhibitionRemoveResp struct {
	Id           int64 `json:"id"`
	Status       int64 `json:"status"`
	RoomId       int64 `json:"room_id"`
	RoomType     int64 `json:"room_type"`
	Uid          int64 `json:"uid"`
	OperatorUser int64 `json:"operator_user"`
}

type ProhibitionInfo struct {
	Id           int64  `json:"id"`
	RoomType     int64  `json:"room_type"`
	RoomId       int64  `json:"room_id"`
	CreatedAt    int64  `json:"created_at"`
	Avatar       string `json:"avatar"`
	Uid          int64  `json:"uid"`
	OperatorUser int64  `json:"operator_user"`
	UserName     string `json:"user_name"`
	Status       int64  `json:"status"`
}

type ProhibitionListReq struct {
	LastId   int64 `json:"last_id" validate:"omitempty,numeric"`
	PageSize int64 `json:"page_size" validate:"required,numeric,max=100,min=1"`
	RoomType int64 `json:"room_type" validate:"required,numeric,min=1"`
	RoomId   int64 `json:"room_id" validate:"required,numeric,min=1"`
}

type ProhibitionListResp struct {
	Total int64              `json:"total"`
	List  []*ProhibitionInfo `json:"list"`
}

// Code generated by goctl. DO NOT EDIT.
package types

type BackgroundImgInfo struct {
	Url      string `json:"url"`       //背景图地址
	SmallUrl string `json:"small_url"` //背景小图地址
	Name     string `json:"name"`      //名称
	Key      string `json:"key"`
	Tag      string `json:"tag"`
	Id       int64  `json:"id"`
	Type     int64  `json:"type"`
}

type BackgroundImgReq struct {
	LastId   int64 `json:"last_id" validate:"omitempty,numeric"`
	PageSize int64 `json:"page_size" validate:"omitempty,numeric,max=100,min=0"`
	Type     int64 `json:"type" validate:"required,numeric,min=1"`
}

type BackgroundImgResp struct {
	Total int64               `json:"total"`
	List  []BackgroundImgInfo `json:"list"`
}

type DictionaryInfo struct {
	Label        string `json:"label"`
	Value        int64  `json:"value"`
	DictionaryId int64  `json:"dictionary_id"`
}

type DictionaryGetReq struct {
	DictionaryType string `json:"dictionary_type" validate:"required,min=1"`
}

type DictionaryGetResp struct {
	List []DictionaryInfo `json:"list"`
}

type ProjectConfigDetailReq struct {
	ConfigType int64  `json:"config_type" validate:"required,min=1"`
	ConfigKey  string `json:"config_key" validate:"required,min=1"`
}

type ProjectConfigDetailResp struct {
	Id          int64  `json:"id"`
	ConfigName  string `json:"config_name"`
	ConfigKey   string `json:"config_key"`
	ConfigValue string `json:"config_value"`
	ConfigType  int64  `json:"config_type"`
}

type AreaInfo struct {
	Longitude string `json:"longitude"`
	Latitude  string `json:"latitude"`
	Pid       int64  `json:"pid"`
	Name      string `json:"name"`
	Shortname string `json:"shortname"`
	Id        int64  `json:"id"`
	Level     int64  `json:"level"`
}

type AreaListReq struct {
	LastId   int64 `json:"last_id" validate:"omitempty,numeric"`
	PageSize int64 `json:"page_size" validate:"omitempty,numeric,max=100,min=0"`
	Level    int64 `json:"level" validate:"required,numeric,min=1"`
	Pid      int64 `json:"pid" validate:"omitempty,numeric,min=0"`
}

type AreaListResp struct {
	Total int64      `json:"total"`
	List  []AreaInfo `json:"list"`
}
